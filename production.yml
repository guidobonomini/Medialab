version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: medialab_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: medialab_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  polls:
    build: 
      context: .
      dockerfile: ./services/polls/Dockerfile
    image: medialab_polls
    container_name: medialab_polls
    volumes:
      - ./services/polls:/app
    depends_on:
      - polls_postgres
      - redis
    env_file:
      - ./.envs/.local/.polls
      - ./.envs/.local/.polls_postgres
    ports:
      - "8001:8001"
    command: ./services/polls/start

  polls_db:
    build:
      context: .
      dockerfile: ./compose/production/polls_db/Dockerfile
    restart: always
    image: medialab_polls_db
    container_name: medialab_polls_db
    volumes:
      - medialab_polls_db_data:/var/lib/postgresql/data
      - medialab_polls_db_data_backups:/backups
    env_file:
      - ./.envs/.local/.polls_db

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: medialab_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      - '0.0.0.0:5555:5555'

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: medialab_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: medialab_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: medialab_production_flower
    command: /start-flower

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z
